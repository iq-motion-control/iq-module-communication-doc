Brushless Drive
---------------

Brushless Drive is the low level driver of the motor’s phase voltage.

Arduino
~~~~~~~

To use Brushless Drive in Arduino, ensure iq_module_communication.hpp is included. This allows the creation of a BrushlessDriveClient object. 
See the Message Table below for available messages. All message objects use the Short
Name with a trailing underscore. All messages use the standard ``Get/Set/Save`` functions.

A minimal working example for the BrushlessDriveClient is:

.. code-block:: Arduino

    #include <iq_module_communicaiton.hpp>
    
    IqSerial ser(Serial2);
    BrushlessDriveClient mot(0);
    
    void setup() {
        ser.begin();
    }
    
    void loop() {
        ser.set(mot.drive_spin_volts_,0.1f);
    }

C++ 
~~~

To use Brushless Drive in C++, include brushless drive client.hpp. This allows the creation of a ``BrushlessDriveClient`` object. 
See the Message Table below for available messages. All message objects use the Short Name with a trailing underscore. All messages use the standard ``Get/Set/Save`` functions.

A minimal working example for the BrushlessDriveClient is:

.. include:: ../notes/c-full-code.rst

.. code-block:: c++
    
    #include "generic_interface.hpp"
    #include "propeller_motor_control_client.hpp"

    float voltage = 3.0f; // volts
    
    int main(){

    // Make a communication interface object
    // This is what creates and parses packets
    GenericInterface com;

    // Make a Temperature Estimator Client object with obj_id 0
    BrushlessDriveClient brushless(0);

    // Drives the motor at 3 Volts
    brushless.drive_spin_volts_.set(com, voltage);

    // Insert code for interfacing with hardware here  

    }


Matlab
~~~~~~

To use Brushless Drive Controller in Matlab, all Vertiq communication code must be included in your path.
This allows the creation of a BrushlessDriveClient object. See the Message Table below for available messages. All
message strings use the Short Names. All messages use the standard ``Get/Set/Save`` functions.

A minimal working example for the BrushlessDriveClient is:

.. code-block:: Matlab

    % Make a communication interface object
    com = MessageInterface(’COM18’,115200);

    % Make a BrushlessDriveClient object with obj_id 0
    BrushlessDrive = BrushlessDriveClient(’com’,com);

    % Use the BrushlessDriveClient object
    BrushlessDrive.set(’drive_spin_volts’,3.0);

Python
~~~~~~

To use the Brushless Drive Client in Python, import ``iqmotion`` and create a module that has the Brushless Drive Client within its firmware. 
See the Message Table below for available messages. All message strings use the Short Names. 
All messages use the standard Get/Set/Save functions.

A minimal working example for the BrushlessDriveClient is:

.. code-block:: Python
    :substitutions:

    import iqmotion as iq

    com = iq.SerialCommunicator("/dev/ttyUSB0")
    |variable_name| = iq.|module_name|(com, 0)
    
    |variable_name|.set("brushless_drive", "drive_spin_volts", 5) # Spins motor at 5 volts

Message Table
~~~~~~~~~~~~~

Type ID 50 | Brushless Drive

    .. table:: Brushless Drive
        :widths: 8 18 15 10 5 50
        :class: tight-table


        | Sub ID | Short Name                    | Access         | Data Type | Unit                                   | Note                                                                                                                                                                                                                                                                                                                                                                                                        |

        | 0      | drive_mode                    | get            | uint8     | :math:`\text{Enum}`                    | 0 = phase_pwm, 1 = phase_volts, 2 = spin_pwm, 3 = spin_volts, 4 = brake, 5 = coast                                                                                                                                                                                                                                                                                                                          |

        | 1      | drive_phase_pwm               | set            | float     | :math:`\text{PWM}`                     | This value is used in open loop (gimbal) mode with this throttle [-1, 1] and is used with phase_angle.                                                                                                                                                                                                                                                                                                      |

        | 2      | drive_phase_volts             | set            | float     | :math:`\text{V}`                       | This value is used in open loop (gimbal) mode with this voltage and is used with phase_angle.                                                                                                                                                                                                                                                                                                               |

        | 3      | drive_spin_pwm                | set            | float     | :math:`\text{PWM}`                     | This spins motor with this throttle [-1, 1].                                                                                                                                                                                                                                                                                                                                                                |

        | 4      | drive_spin_volts              | set            | float     | :math:`\text{V}`                       | This spins motor with this voltage.                                                                                                                                                                                                                                                                                                                                                                         |

        | 5      | drive_brake                   | set            |           |                                        | This shorts the motor phases, which slows the motor down by dissipating energy in the motor.                                                                                                                                                                                                                                                                                                                |
        +--------+-------------------------------+----------------+-----------+----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
        | 6      | drive_coast                   | set            |           |                                        | This disables all drive circuitry, which causes the motor to coast passively.                                                                                                                                                                                                                                                                                                                               |

        | 7      | drive_angle_offset            | get            | float     | :math:`\text{rad}`                     | This is analogous to motor timing. This is internally computed by the motor.                                                                                                                                                                                                                                                                                                                                |

        | 8      | drive_pwm                     | get            | float     | :math:`\text{PWM}`                     | This is the applied PWM after all computation and limiting [-1, 1].                                                                                                                                                                                                                                                                                                                                         |

        | 9      | drive_volts                   | get            | float     | :math:`\text{V}`                       | This is the applied PWM after all computation and limiting.                                                                                                                                                                                                                                                                                                                                                 |

        | 10     | mech_lead_angle               | get            | float     | :math:`\text{rad}`                     | This is the lag compensation used.                                                                                                                                                                                                                                                                                                                                                                          |

        | 11     | obs_supply_volts              | get            | float     | :math:`\text{V}`                       | This is the observed supply voltage.                                                                                                                                                                                                                                                                                                                                                                        |

        | 12     | obs_angle                     | get            | float     | :math:`\text{rad}`                     | This is the observed motor angle.                                                                                                                                                                                                                                                                                                                                                                           |

        | 13     | obs_velocity                  | get            | float     | :math:`\frac{\text{rad}}{\text{s}}`    | This is the observed motor velocity.                                                                                                                                                                                                                                                                                                                                                                        |

        | 14     | motor_pole_pairs              | get, set, save | uint16    | :math:`\text{PP}`                      | This is the number of motor pole pairs (magnets/2).                                                                                                                                                                                                                                                                                                                                                         |

        | 15     | motor_emf_shape               | get, set, save | uint8     |                                        | The default setting is sinusoidal EMF. Some firmwares have trapezoidal or custom shapes.                                                                                                                                                                                                                                                                                                                    |

        | 16     | permute_wires                 | get, set, save | uint8     | :math:`\text{bool}`                    | This is factory set. Do not change.                                                                                                                                                                                                                                                                                                                                                                         |

        | 17     | calibration_angle             | get, set, save | float     | :math:`\text{rad}`                     | This is factory set. Do not change.                                                                                                                                                                                                                                                                                                                                                                         |

        | 18     | lead_time                     | get, set, save | float     | :math:`s`                              | This is factory set. Do not change.                                                                                                                                                                                                                                                                                                                                                                         |

        | 19     | commutation_hz                | get, set, save | uint32    | :math:`Hz`                             | This is the frequency of commutation. Higher frequencies run faster and more efficiently, but may not give the controller enough computation time.                                                                                                                                                                                                                                                          |

        | 20     | phase_angle                   | get, set       | float     | :math:`\text{rad}`                     | This is the angle used for open loop (gimbal) mode and is used with drive_phase_pwm or drive_phase_volts.                                                                                                                                                                                                                                                                                                   |

        | 21     | drive_volts_addition          | get, set       | float     | :math:`\text{V}`                       | This is the amount of voltage applied for anticogging or buzzing.                                                                                                                                                                                                                                                                                                                                           |

        | 22     | angle_adjust_enable           | get, set, save | uint8     | :math:`\text{bool}`                    | This setting enables closed loop timing angle adjustment.                                                                                                                                                                                                                                                                                                                                                   |

        | 23     | motor_emf_calc                | get            | float     | :math:`\text{V}`                       | This is the computed emf from closed loop angle calculation.                                                                                                                                                                                                                                                                                                                                                |

        | 24     | angle_adjustment              | get            | float     | :math:`\text{rad}`                     | This is the angle adjustment from closed loop calculation.                                                                                                                                                                                                                                                                                                                                                  |

        | 25     | angle_adjust_max              | get, set, save | float     | :math:`\text{rad}`                     | This is the maximum angle the closed loop calculation is allowed to adjust.                                                                                                                                                                                                                                                                                                                                 |

        | 26     | angle_adjust_kp               | get, set, save | float     |                                        | This is the proportional gain for angle adjustment.                                                                                                                                                                                                                                                                                                                                                         |
        +--------+-------------------------------+----------------+-----------+----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
        | 27     | angle_adjust_ki               | get, set, save | float     |                                        | This is the integral gain for angle adjustment.                                                                                                                                                                                                                                                                                                                                                             |

        | 29     | v_max_start                   | get, set, save | float     | :math:`V`                              | This is the supply voltage at which the safeties will start to attempt to limit the regeneration of the motor. This is used in conjunction with the volts_limit parameter to set the safety range: v_max_start sets the starting voltage and volts_limit sets the ending voltage.                                                                                                                           |

        | 32     | motor_Kv                      | get, set, save | float     | :math:`\frac{\text{RPM}}{V}`           | This is the motor's voltage constant.                                                                                                                                                                                                                                                                                                                                                                       |

        | 33     | motor_R_ohm                   | get, set, save | float     | :math:`\text{ohm}`                     | This is the motor's resistance.                                                                                                                                                                                                                                                                                                                                                                             |

        | 34     | motor_I_max                   | get, set, save | float     | :math:`A`                              | This is the max allowable motor current.                                                                                                                                                                                                                                                                                                                                                                    |

        | 35     | volts_limit                   | get, set, save | float     | :math:`V`                              | This is the supply voltage at the end of the range that the safeties will attempt to limit the regeneration of the motor. This is used in conjunction with the v_max_start parameter to set the safety range: v_max_start sets the starting voltage and volts_limit sets the ending voltage.                                                                                                                |
        +--------+-------------------------------+----------------+-----------+----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
        | 36     | est_motor_amps                | get            | float     | :math:`A`                              | This is the estimated motor amps.                                                                                                                                                                                                                                                                                                                                                                           |

        | 37     | est_motor_torque              | get            | float     | :math:`N * m`                          | This is the estimated motor torque.                                                                                                                                                                                                                                                                                                                                                                         |

        | 38     | motor_redline_start           | get, set, save | float     | :math:`\frac{\text{rad}}{s}`           | This is the speed at which the motor begins to derate.                                                                                                                                                                                                                                                                                                                                                      |

        | 39     | motor_redline_end             | get, set, save | float     | :math:`\frac{\text{rad}}{s}`           | This is the speed at which the motor is fully derated.                                                                                                                                                                                                                                                                                                                                                      |

        | 40     | motor_l                       | get, set, save | float     | :math:`H`                              | This is the cross inductance.                                                                                                                                                                                                                                                                                                                                                                               |

        | 41     | derate                        | get            | int32     | :math:`PU_{fix16}`                     | This is the amount of derating. No derate = 65536, full derate = 0.                                                                                                                                                                                                                                                                                                                                         |

        | 42     | motor_i_soft_start            | get, set, save | float     | :math:`A`                              | This is the current at which the motor begins to derate.                                                                                                                                                                                                                                                                                                                                                    |

        | 43     | motor_i_soft_end              | get, set, save | float     | :math:`A`                              | This is the current at which the motor is fully derated.                                                                                                                                                                                                                                                                                                                                                    |
        +--------+-------------------------------+----------------+-----------+----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
        | 44     | emf                           | get            | float     | :math:`\text{V}`                       | This reports the estimated back-EMF voltage produced by the motor based on its velocity.                                                                                                                                                                                                                                                                                                                    |

        | 45     | volts_at_max_amps             | get            | float     | :math:`\text{V}`                       | This is the drive voltage that is expected to be applied at the motor's maximum safe current based on motor resistance. This is used to limit the maximum current applied to the motor. This returns a model based voltage that is based on the maximum allowed motor amps.                                                                                                                                 |

        | 46     | slew_volts_per_second         | get, set, save | float     | :math:`\frac{V}{s}`                    | This is the maximum allowed rate of change for the drive voltage when the slew rate is enabled. E.g. If this is 100, Then the drive voltage of the motor cannot change faster than 100 V/s.                                                                                                                                                                                                                 |

        | 47     | slew_enable                   | get, set, save | float     | :math:`\text{V}`                       | This enables a voltage slew rate on the motor's drive voltage.                                                                                                                                                                                                                                                                                                                                              |

        | 48     | motoring_supply_current_limit | get, set, save | float     | :math:`A`                              | On modules that support dynamic supply current limiting, this entry determines the current limit for the current from the supply when the module is "motoring", i.e. the drive voltage is greater than the back-EMF, as opposed to when it is regenerating. Note this is the current from the supply, so it would be the current from your battery or power supply.                                         |

        | 49     | regen_supply_current_limit    | get, set, save | float     | :math:`A`                              | On modules that support dynamic supply current limiting, this entry determines the current limit for the current back to the supply when the module is regenerating, i.e. the back-EMF is greater than the drive voltage, as opposed to when it is motoring. Note this is the current from the supply, so it would be the current from your battery or power supply.                                        |

        | 50     | supply_current_limit_enable   | get, set, save | uint8     | :math:`\text{bool}`                    | This enables or disables dynamic supply current limiting. Limiting is enabled when true, and disabled when false.                                                                                                                                                                                                                                                                                           |

        | 51     | regen_limiting                | get            | uint8     | :math:`\text{bool}`                    | When dynamic supply current limiting is enabled, this reports whether the drive voltage is currently being limited due to the regeneration current back through the supply. True means that the limiter is currently controlling the drive voltage because the regeneration supply current is at or above the limit, false means the regeneration current is low enough that the limiter has not activated. |

        | 52     | regen_limit_adjust            | get            | float     | :math:`\text{V}`                       | This reports the adjustment voltage being applied to the dynamic supply current limited volts by the closed loop controller due to the regeneration limit. The adjustment adapts to improve the accuracy of the supply current limiting.                                                                                                                                                                    |

        | 53     | motoring_limiting             | get            | uint8     | :math:`\text{bool}`                    | When dynamic supply current limiting is enabled, this reports whether the drive voltage is currently being limited due to the motoring supply current. True means that the limiter is currently controlling the drive voltage because the supply current is at or above the limit, false means the supply current is low enough that the limiter has not activated.                                         |

        | 54     | motoring_limit_adjust         | get            | float     | :math:`\text{V}`                       | This reports the adjustment voltage being applied to the dynamic supply current limited volts by the closed loop controller due to the motoring limit. The adjustment adapts to improve the accuracy of the supply current limiting.                                                                                                                                                                        |

        | 55     | regen_limit_kp                | get, set, save | float     | :math:`\frac{V}{A}`                    | This is the P gain for the closed loop controller of the regeneration dynamic supply current limiter.                                                                                                                                                                                                                                                                                                       |

        | 56     | regen_limit_ki                | get, set, save | float     | :math:`\frac{V*s}{A}`                  | This is the I gain for the closed loop controller of the regeneration dynamic supply current limiter.                                                                                                                                                                                                                                                                                                       |
        +--------+-------------------------------+----------------+-----------+----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
        | 57     | regen_limit_max               | get, set, save | float     | :math:`\text{V}`                       | This is the maximum amount of drive voltage adjustment that the closed loop portion of the regeneration dynamic supply current limiter will apply to the calculated voltage limit.                                                                                                                                                                                                                          |

        | 58     | motoring_limit_kp             | get, set, save | float     | :math:`\frac{V}{A}`                    | This is the P gain for the closed loop controller of the motoring dynamic supply current limiter.                                                                                                                                                                                                                                                                                                           |
        +--------+-------------------------------+----------------+-----------+----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
        | 59     | motoring_limit_ki             | get, set, save | float     | :math:`\frac{V*s}{A}`                  | This is the I gain for the closed loop controller of the motoring dynamic supply current limiter.                                                                                                                                                                                                                                                                                                           |

        | 60     | motoring_limit_max            | get, set, save | float     | :math:`\text{V}`                       | This is the maximum amount of drive voltage adjustment the closed loop portion of the motoring dynamic supply current limiter will apply to the calculated voltage limit.                                                                                                                                                                                                                                   |


